{"version":3,"sources":["board.js","WorkTable.js","serviceWorker.js","index.js"],"names":["Board","canvas","svgSources","cacheSvg","eventTypes","ZOOM","DRAGPANSTART","DRAGPANEND","this","pLeft","parentNode","offsetLeft","pTop","offsetTop","width","viewWidth","offsetWidth","height","viewHeight","offsetHeight","fabric","Canvas","selection","LISTAREA","CARDSIZE","events","loadSvgs","initGlobalEvents","createSomething","cb","ks","Object","keys","i","forEach","key","loadSVGFromURL","objects","options","util","groupSVGElements","scale","length","opt","index","fontFamily","card","Rect","top","left","rx","ry","fill","color","shadow","offsetX","offsetY","blur","text","Textbox","fontSize","splitByGrapheme","num","group","Group","_cardId","subTargetCheck","hasControls","hasBorders","dotmenu","clone","set","originX","originY","menuBtn","btnG","on","e","target","getObjects","hoverCursor","renderAll","add","item","addCard","holdKeys","spaceKey","actions","moveBoard","upperCanvasEl","classList","remove","triggerEvent","delta","Point","movementX","movementY","relativePan","wrapperEl","addEventListener","preventDefault","ctrlKey","deltaY","Math","min","max","zoomPoint","pageX","pageY","zoomToPoint","passive","capture","document","keyCode","ev","data","fn","call","push","registerDragBoardEvent","WorkTable","state","zoom","dragPan","_b","setState","className","parseInt","ref","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4VA8PeA,E,WAnPX,WAAaC,GAAS,IAAD,gCAgBrBC,WAAa,CACT,QAAW,wFAjBM,KAmBrBC,SAAW,GAnBU,KAoBrBC,WAAa,CACTC,KAAM,OACNC,aAAc,eACdC,WAAY,cAtBZC,KAAKC,MAAQR,EAAOS,WAAWC,WAC/BH,KAAKI,KAAOX,EAAOS,WAAWG,UAC9BZ,EAAOa,MAAQN,KAAKO,UAAYd,EAAOS,WAAWM,YAClDf,EAAOgB,OAAST,KAAKU,WAAajB,EAAOS,WAAWS,aACpDX,KAAKP,OAAS,IAAImB,SAAOC,OAAOpB,GAChCO,KAAKP,OAAOqB,WAAY,EACxBd,KAAKe,SAAW,CAAC,GAAI,GAAI,IAAK,KAC9Bf,KAAKgB,SAAW,CAAC,IAAK,KACtBhB,KAAKiB,OAAS,GAEdjB,KAAKkB,UAAS,WACV,EAAKC,mBACL,EAAKC,qB,qDAYHC,GAAK,IAAD,OACNC,EAAKC,OAAOC,KAAKxB,KAAKN,YACtB+B,EAAI,EACRH,EAAGI,SAAQ,SAAAC,GACPf,SAAOgB,eAAe,EAAKlC,WAAWiC,IAAM,SAACE,EAASC,GAClD,EAAKnC,SAASgC,GAAOf,SAAOmB,KAAKC,iBAAiBH,EAASC,GAC3D,EAAKnC,SAASgC,GAAKM,MAAM,OACnBR,IAAMH,EAAGY,QACXb,GAAMA,Y,8BAKbc,EAAKC,GAAQ,IAAD,OAEbC,EAAa,oLACbC,EAAO,IAAI1B,SAAO2B,KAAK,CACvBC,IAAK,EACLC,KAAM,EACNnC,MAAON,KAAKgB,SAAS,GACrBP,OAAQT,KAAKgB,SAAS,GACtB0B,GAAI,EACJC,GAAI,EACJC,KAAMT,EAAIU,MACVC,OAAQ,CACJD,MAAO,iBACPE,QAAS,EACTC,QAAS,GACTC,KAAM,MAGVC,EAAO,IAAItC,SAAOuC,QAAQhB,EAAIe,KAAM,CACpCT,KAAM,GACND,IAAK,GACLlC,MAAON,KAAKgB,SAAS,GAAK,GAC1BoC,SAAU,GACVR,KAAM,OACNP,aACAgB,iBAAiB,IAEfC,EAAM,IAAI1C,SAAOuC,QAAQhB,EAAImB,IAAK,CACpCb,KAAM,GACND,IAAK,GACLlC,MAAO,GACP8C,SAAU,GACVf,aACAO,KAAM,iBACNS,iBAAiB,IAGjBE,EAAQ,IAAI3C,SAAO4C,MAAM,CAAClB,EAAMY,EAAMI,GAAM,CAC5CG,QAAS,OACTjB,IAAKxC,KAAKe,SAAS,GACnB0B,KAAMzC,KAAKe,SAAS,IAAMf,KAAKgB,SAAS,GAAK,IAAMoB,EACnD9B,MAAON,KAAKgB,SAAS,GACrBP,OAAQT,KAAKgB,SAAS,GACtB0C,gBAAgB,EAChBC,aAAa,EACbC,YAAY,IAEhB5D,KAAKL,SAASkE,QAAQC,OAAM,SAAAA,GACxBA,EAAMC,IAAI,CACNtB,KAAM,GACND,IAAK,EACLwB,QAAS,OACTC,QAAS,QAEb,IAAIC,EAAU,IAAItD,SAAO2B,KAAK,CAC1BC,IAAK,EACLC,KAAM,EACNnC,MAAO,GACPG,OAAQ,GACRuD,QAAS,OACTC,QAAS,MACTvB,GAAI,EACJC,GAAI,EACJC,KAAM,kBAENuB,EAAO,IAAIvD,SAAO4C,MAAM,CAACU,EAASJ,GAAQ,CAC1CtB,KAAO,EAAKxB,SAAS,GAAG,EACxByB,KAAM,EAAKzB,SAAS,GAAK,GAAK,EAAKA,SAAS,GAAG,EAC/CV,MAAO,GACPG,OAAQ,GACRiD,gBAAgB,EAChBC,aAAa,EACbC,YAAY,IAEhBO,EAAKC,GAAG,aAAa,SAAUC,GAC3BA,EAAEC,OAAOC,aAAa,GAAGR,IAAI,OAAQ,kBACrC/D,KAAKP,OAAO+E,YAAc,UAC1BxE,KAAKP,OAAOgF,eAEhBN,EAAKC,GAAG,YAAY,SAAUC,GAC1BA,EAAEC,OAAOC,aAAa,GAAGR,IAAI,OAAQ,iBACrC/D,KAAKP,OAAO+E,YAAc,UAC1BxE,KAAKP,OAAOgF,eAEhBlB,EAAMmB,IAAIP,MAUdnE,KAAKP,OAAOiF,IAAInB,K,wCAEA,IAAD,OACf,CAAC,CAAEV,MAAO,UAAWS,IAAK,IAAKJ,KAAM,0GACrC,CAAEL,MAAO,UAAWS,IAAK,IAAKJ,KAAM,0DACpC,CAAEL,MAAO,UAAWS,IAAK,IAAKJ,KAAM,2GAC/BxB,SAAQ,SAACiD,EAAMvC,GACZ,EAAKwC,QAAQD,EAAMvC,Q,+CAGJ,IAAD,OAElByC,EAAW,CACXC,UAAU,GAEVC,EAAU,CACVC,WAAW,GAEX/C,EAAQ,EACZjC,KAAKP,OAAO2E,GAAG,cAAc,SAAAC,GACrBQ,EAASC,WACTC,EAAQC,UAAY,EACpB,EAAKvF,OAAOwF,cAAcC,UAAUC,OAAO,eAC3C,EAAK1F,OAAOwF,cAAcC,UAAUR,IAAI,gBACxC,EAAKU,aAAa,EAAKxF,WAAWE,kBAI1CE,KAAKP,OAAO2E,GAAG,YAAY,SAAAC,GACnBU,EAAQC,WAAaH,EAASC,WAC9B,EAAKM,aAAa,EAAKxF,WAAWG,YAClC,EAAKN,OAAOwF,cAAcC,UAAUC,OAAO,eAC3C,EAAK1F,OAAOwF,cAAcC,UAAUC,OAAO,gBAC3CJ,EAAQC,UAAY,MAG5BhF,KAAKP,OAAO2E,GAAG,cAAc,SAAAC,GACzB,GAAIU,EAAQC,WAAaX,GAAKA,EAAEA,EAAG,CAC/B,IAAIgB,EAAQ,IAAIzE,SAAO0E,MAAMjB,EAAEA,EAAEkB,UAAWlB,EAAEA,EAAEmB,WAChD,EAAK/F,OAAOgG,YAAYJ,OAGhCrF,KAAKP,OAAO2E,GAAG,cAAc,SAAAC,GACrBA,EAAEC,QACED,EAAEC,OAAOb,UACTY,EAAEC,OAAOC,aAAa,GAAGR,IAAI,SAAU,gCACvC,EAAKtE,OAAOgF,gBAMxBzE,KAAKP,OAAO2E,GAAG,aAAa,SAAAC,GACpBA,EAAEC,QACED,EAAEC,OAAOb,UACTY,EAAEC,OAAOC,aAAa,GAAGR,IAAI,SAAU,gCACvC,EAAKtE,OAAOgF,gBAKxBzE,KAAKP,OAAOiG,UAAUC,iBAAiB,SAAS,SAAAtB,GAE5C,GADAA,EAAEuB,iBACEvB,EAAEwB,QAAS,CACX5D,GAAoB,IAAXoC,EAAEyB,OACX7D,EAAQ8D,KAAKC,IAAI/D,EAAO,IACxBA,EAAQ8D,KAAKE,IAAIhE,EAAO,IACxB,IAAIiE,EAAY,IAAItF,SAAO0E,MAAMjB,EAAE8B,MAAQ,EAAKlG,MAAOoE,EAAE+B,MAAQ,EAAKhG,MACtE,EAAKX,OAAO4G,YAAYH,EAAWjE,GACnC,EAAKmD,aAAa,EAAKxF,WAAWC,KAAMoC,MAG7C,CAAEqE,SAAS,EAAOC,SAAS,IAE9BC,SAASb,iBAAiB,WAAW,SAAAtB,GACf,KAAdA,EAAEoC,UACF5B,EAASC,SAAW,EACpB,EAAKrF,OAAOwF,cAAcC,UAAUR,IAAI,mBAE7C,GACH8B,SAASb,iBAAiB,SAAS,SAAAtB,GACb,KAAdA,EAAEoC,UACF5B,EAASC,SAAW,EACpB,EAAKrF,OAAOwF,cAAcC,UAAUC,OAAO,eAC3C,EAAK1F,OAAOwF,cAAcC,UAAUC,OAAO,gBACvCJ,EAAQC,YACR,EAAKI,aAAa,EAAKxF,WAAWG,YAClCgF,EAAQC,UAAY,OAG7B,K,mCAEO0B,EAAIC,GAAO,IAAD,OAChB3G,KAAKiB,OAAOyF,IACZ1G,KAAKiB,OAAOyF,GAAIhF,SAAQ,SAAAkF,GACpBA,EAAGC,KAAK,EAAMF,Q,yBAItBD,EAAIE,GACA5G,KAAKiB,OAAOyF,GACZ1G,KAAKiB,OAAOyF,GAAII,KAAKF,GAErB5G,KAAKiB,OAAOyF,GAAM,CAACE,K,yCAIvB5G,KAAK+G,6B,KClNEC,E,4MA7BbC,MAAQ,CACNC,KAAM,EACNC,SAAS,G,kEAEW,IAAD,OACnBnH,KAAKoH,GAAK,IAAI5H,EAAMQ,KAAKP,QACzBO,KAAKoH,GAAGhD,GAAG,QAAQ,SAAA8C,GACjB,EAAKG,SAAS,CAAEH,YAElBlH,KAAKoH,GAAGhD,GAAG,gBAAgB,WACzB,EAAKiD,SAAS,CAAEF,SAAS,OAE3BnH,KAAKoH,GAAGhD,GAAG,cAAc,WACvB,EAAKiD,SAAS,CAAEF,SAAS,S,+BAGlB,IAAD,OACR,OACE,yBAAKG,UAAU,QACb,yBAAKA,UAAU,SACb,uFAAe,6BAAf,kEACA,uCAAaC,SAAyB,IAAhBvH,KAAKiH,MAAMC,MAAjC,KACA,kDAAwBlH,KAAKiH,MAAME,QAAQ,MAAM,OAEnD,4BAAQG,UAAU,SAASE,IAAK,SAAAnD,GAAC,OAAK,EAAK5E,OAAS4E,U,GAzBpCoD,aCEJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzB,SAAS0B,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d02ddc46.chunk.js","sourcesContent":["/*\n * @Author: DT\n * @Description: ...\n * @Date: 2020-09-18 13:26:32\n * @LastEditTime: 2020-09-19 09:13:04\n */\n\n // 先随便写下功能\nimport { fabric } from \"fabric\";\n\nclass Board {\n    constructor (canvas) {\n        this.pLeft = canvas.parentNode.offsetLeft;\n        this.pTop = canvas.parentNode.offsetTop;\n        canvas.width = this.viewWidth = canvas.parentNode.offsetWidth;\n        canvas.height = this.viewHeight = canvas.parentNode.offsetHeight;\n        this.canvas = new fabric.Canvas(canvas);\n        this.canvas.selection = false;\n        this.LISTAREA = [50, 50, 700, 700];\n        this.CARDSIZE = [180, 180];\n        this.events = {};\n        // obj.selectable = false  禁止拖拽\n        this.loadSvgs(() => {\n            this.initGlobalEvents();\n            this.createSomething();\n        });\n    }\n    svgSources = {\n        \"dotmenu\": \"https://github.com/stoneWeb/canvas-worktable/raw/master/src/assets/icons/dotmenu.svg\",\n    }\n    cacheSvg = {}\n    eventTypes = {\n        ZOOM: 'zoom',\n        DRAGPANSTART: 'dragPanStart',\n        DRAGPANEND: 'dragPanEnd',\n    }\n    loadSvgs (cb) {\n        let ks = Object.keys(this.svgSources);\n        let i = 0;\n        ks.forEach(key => {\n            fabric.loadSVGFromURL(this.svgSources[key], (objects, options) => {\n                this.cacheSvg[key] = fabric.util.groupSVGElements(objects, options);\n                this.cacheSvg[key].scale(0.02)\n                if (++i === ks.length) {\n                    cb && cb()\n                }\n            })\n        })\n    }\n    addCard (opt, index) {\n        // { text, num, color }\n        let fontFamily = '-apple-system,BlinkMacSystemFont,Segoe UI,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol';\n        let card = new fabric.Rect({\n            top: 0, \n            left: 0, \n            width: this.CARDSIZE[0], \n            height: this.CARDSIZE[1], \n            rx: 4, \n            ry: 4, \n            fill: opt.color,\n            shadow: {\n                color: 'rgba(0,0,0,.2)',\n                offsetX: 1,\n                offsetY: 10,\n                blur: 10\n            }\n        });\n        let text = new fabric.Textbox(opt.text, {\n            left: 10,\n            top: 35,\n            width: this.CARDSIZE[0] - 20,\n            fontSize: 16,\n            fill: '#333',\n            fontFamily,\n            splitByGrapheme: true,\n          });\n          let num = new fabric.Textbox(opt.num, {\n            left: 10,\n            top: 10,\n            width: 20,\n            fontSize: 14,\n            fontFamily,\n            fill: 'rgba(0,0,0,.7)',\n            splitByGrapheme: true,\n          });\n        //进行组合\n        let group = new fabric.Group([card, text, num], {\n            _cardId: '1243',\n            top: this.LISTAREA[1], \n            left: this.LISTAREA[0] + (this.CARDSIZE[0] + 20) * index, \n            width: this.CARDSIZE[0],\n            height: this.CARDSIZE[1],\n            subTargetCheck: true,\n            hasControls: false,\n            hasBorders: false,\n        })\n        this.cacheSvg.dotmenu.clone(clone => {\n            clone.set({\n                left: 10,\n                top: 8,\n                originX: 'left',\n                originY: 'top',\n            });\n            let menuBtn = new fabric.Rect({\n                top: 0, \n                left: 0, \n                width: 35, \n                height: 20, \n                originX: 'left',\n                originY: 'top',\n                rx: 4, \n                ry: 4, \n                fill: \"rgba(0,0,0,0)\",\n            });\n            let btnG = new fabric.Group([menuBtn, clone], {\n                top:  -this.CARDSIZE[1]/2, \n                left: this.CARDSIZE[0] - 35 - this.CARDSIZE[0]/2, \n                width: 35,\n                height: 20,\n                subTargetCheck: true,\n                hasControls: false,\n                hasBorders: false,\n            })\n            btnG.on('mouseover', function (e){\n                e.target.getObjects()[0].set(\"fill\", \"rgba(0,0,0,.1)\");\n                this.canvas.hoverCursor = 'pointer';\n                this.canvas.renderAll();\n            });\n            btnG.on('mouseout', function (e){\n                e.target.getObjects()[0].set(\"fill\", \"rgba(0,0,0,0)\");\n                this.canvas.hoverCursor = 'default';\n                this.canvas.renderAll();\n            });\n            group.add(btnG)\n        })\n        // card.on('mouseover', function (e){\n        //     console.log(e)\n        //     console.log(e.subTargets);\n        // });\n        // card.on('mouseout', function (e){\n        //     console.log(e)\n        //     console.log(e.subTargets);\n        // });\n        this.canvas.add(group);\n    }\n    createSomething () {\n        [{ color: '#FF9E4A', num: \"1\", text: \"公司机密文件容易轻易泄露，缺乏监管\" },\n        { color: '#B486BC', num: \"2\", text: \"时间变得琐碎不集中\" },\n        { color: '#F16F81', num: \"3\", text: \"在家上班所产生的电费网费公司不承担\" }]\n            .forEach((item, index) => {\n                this.addCard(item, index)\n            })\n    }\n    registerDragBoardEvent () {\n        //鼠标按下\n        let holdKeys = {\n            spaceKey: false,\n        }\n        let actions = {\n            moveBoard: false\n        }\n        let scale = 1;\n        this.canvas.on('mouse:down', e => {\n            if (holdKeys.spaceKey) {\n                actions.moveBoard = 1;\n                this.canvas.upperCanvasEl.classList.remove('canvas-move');\n                this.canvas.upperCanvasEl.classList.add('canvas-moved');\n                this.triggerEvent(this.eventTypes.DRAGPANSTART);\n            }\n        });\n    \n        this.canvas.on('mouse:up', e => {\n            if (actions.moveBoard && holdKeys.spaceKey) {\n                this.triggerEvent(this.eventTypes.DRAGPANEND);\n                this.canvas.upperCanvasEl.classList.remove('canvas-move');\n                this.canvas.upperCanvasEl.classList.remove('canvas-moved');\n                actions.moveBoard = 0;\n            }\n        });\n        this.canvas.on('mouse:move', e => {\n            if (actions.moveBoard && e && e.e) {\n                var delta = new fabric.Point(e.e.movementX, e.e.movementY);\n                this.canvas.relativePan(delta);\n            }\n        });\n        this.canvas.on('mouse:over', e => {\n            if (e.target) {\n                if (e.target._cardId) {\n                    e.target.getObjects()[0].set(\"shadow\", \"1px 10px 10px rgba(0,0,0,.3)\");\n                    this.canvas.renderAll();\n                }\n            }\n            \n        });\n        \n        this.canvas.on('mouse:out', e => {\n            if (e.target) {\n                if (e.target._cardId) {\n                    e.target.getObjects()[0].set(\"shadow\", \"1px 10px 10px rgba(0,0,0,.2)\");\n                    this.canvas.renderAll();\n                }\n            }\n        });\n\n        this.canvas.wrapperEl.addEventListener('wheel', e => {\n            e.preventDefault();\n            if (e.ctrlKey) {\n                scale -= e.deltaY * 0.02;\n                scale = Math.min(scale, 10);\n                scale = Math.max(scale, 0.2);\n                var zoomPoint = new fabric.Point(e.pageX - this.pLeft, e.pageY - this.pTop);\n                this.canvas.zoomToPoint(zoomPoint, scale);\n                this.triggerEvent(this.eventTypes.ZOOM, scale);\n            }\n            \n        }, { passive: false, capture: false, });\n\n        document.addEventListener('keydown', e => {\n            if (e.keyCode === 32) {\n                holdKeys.spaceKey = 1;\n                this.canvas.upperCanvasEl.classList.add('canvas-move')\n            }\n        }, !1)\n        document.addEventListener('keyup', e => {\n            if (e.keyCode === 32) {\n                holdKeys.spaceKey = 0;\n                this.canvas.upperCanvasEl.classList.remove('canvas-move');\n                this.canvas.upperCanvasEl.classList.remove('canvas-moved')\n                if (actions.moveBoard) {\n                    this.triggerEvent(this.eventTypes.DRAGPANEND);\n                    actions.moveBoard = 0;\n                }\n            }\n        }, !1)\n    }\n    triggerEvent (ev, data) {\n        if (this.events[ev]) {\n            this.events[ev].forEach(fn => {\n                fn.call(this, data);\n            })\n        }\n    }\n    on (ev, fn) {\n        if (this.events[ev]) {\n            this.events[ev].push(fn);\n        } else {\n            this.events[ev] = [fn];\n        }\n    }\n    initGlobalEvents () {\n        this.registerDragBoardEvent()\n    }\n}\n\nexport default Board","/*\n * @Author: DT\n * @Description: ...\n * @Date: 2020-09-18 11:21:55\n * @LastEditTime: 2020-09-18 18:12:38\n */\nimport React, { Component } from 'react';\nimport './main.css';\nimport Board from './board';\n\nclass WorkTable extends Component {\n  state = {\n    zoom: 1,\n    dragPan: false,\n  }\n  componentDidMount () {\n    this._b = new Board(this.canvas);\n    this._b.on('zoom', zoom => {\n      this.setState({ zoom })\n    })\n    this._b.on('dragPanStart', () => {\n      this.setState({ dragPan: true })\n    })\n    this._b.on('dragPanEnd', () => {\n      this.setState({ dragPan: false })\n    })\n  }\n  render () {\n    return (\n      <div className=\"main\">\n        <div className=\"tools\">\n          <p>1. 按住空格键拖拽画布<br/>2. macOS触摸板手势缩放画布</p>\n          <span>zoom: {parseInt(this.state.zoom*100)}%</span>\n          <span>canvas dragging: {this.state.dragPan?'yes':'no'}</span>\n        </div>\n        <canvas className=\"canvas\" ref={e => (this.canvas = e)}></canvas>\n      </div>\n    );\n  }\n}\nexport default WorkTable;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * @Author: DT\n * @Description: ...\n * @Date: 2020-09-18 11:21:55\n * @LastEditTime: 2020-09-18 13:19:55\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WorkTable from './WorkTable';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WorkTable />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}